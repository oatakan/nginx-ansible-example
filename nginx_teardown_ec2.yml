- hosts: localhost
  become: no
  tasks:
    - name: get ec2 instance information
      ec2_remote_facts:
        region: "{{ ec2_region }}"
        filters:
          vpc-id: "{{ ec2_vpc_id }}"
          "tag:app": nginx_standalone
      register: ec2_instances

    - name: terminate instances
      ec2:
        region: "{{ ec2_region }}"
        state: "absent"
        instance_ids: "{{ ec2_instances.instances | map(attribute='id') | list }}"

    - name: Get record for router ELB DNS Entry
      route53:
        command: get
        zone: "{{ hosted_zone_domain_name }}"
        record: "{{ subdomain | default(instances.results[0].invocation.module_args.instance_tags.role | lower) }}.{{ ec2_name_prefix | lower }}.{{ hosted_zone_domain_name }}"
        type: A
      register: routerelbrec
      when: hosted_zone_domain_name is defined and ec2_name_prefix is defined

    - name: Delete Router ELB DNS Entry if it doesn't exist
      route53:
        #state: present ## Added in Ansible 2.4 will remove need for when statement below
        command: delete
        zone: "{{ hosted_zone_domain_name }}"
        record: "{{ subdomain | default(instances.results[0].invocation.module_args.instance_tags.role | lower) }}.{{ ec2_name_prefix | lower }}.{{ hosted_zone_domain_name }}"
        type: A
        value: "{{ instances.results[0].tagged_instances[0].public_ip }}"
      when: routerelbrec.set is defined and "{} != routerelbrec.set"